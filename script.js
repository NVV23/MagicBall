// –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
const ANSWERS = [
    "–î–∞", "–ù–µ—Ç", "–í–æ–∑–º–æ–∂–Ω–æ", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–∞", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç",
    "–Ø —É—Å—Ç–∞–ª, —Å–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–ê —Å–∞–º –∫–∞–∫ –¥—É–º–∞–µ—à—å?", "–î–∞, —Ö–æ—Ç—è –Ω–µ—Ç",
    "100%", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞!", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç", "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑", "–í—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ", "–î–æ–≤–µ—Ä—å—Å—è —Å—É–¥—å–±–µ",
    "–ñ–¥–∏ —á—É–¥–∞", "–ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏–π", "–ù–µ—Ç, –∏ –Ω–µ –Ω–∞–¥–µ–π—Å—è",
    "–ú–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≤—Ç—Ä–∞","–ù–µ —Ç–æ—Ä–æ–ø–∏ —Å–æ–±—ã—Ç–∏—è", "–≠—Ç–æ —Ç–≤–æ–π –≤—ã–±–æ—Ä", "–°–ø—Ä–æ—Å–∏ —É –¥—Ä—É–≥–æ–≥–æ —à–∞—Ä–∞",
    "–Ø –≤ —ç—Ç–æ–º —É–≤–µ—Ä–µ–Ω", "–¢—ã —Å–∞–º –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç", "–®–∞–Ω—Å—ã —Ä–∞–≤–Ω—ã",
    "–î–µ–π—Å—Ç–≤—É–π —Å–º–µ–ª–æ", "–†–∏—Å–∫–Ω–∏", "–≠—Ç–æ —Ç–∞–π–Ω–∞",
    "–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ", "–¢–µ–±–µ —Ä–µ—à–∞—Ç—å", "–ù–µ —Å—Ç–æ–∏—Ç —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è",
    "–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ", "–ó–≤—ë–∑–¥—ã –º–æ–ª—á–∞—Ç", "–¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏",
    "–ü–æ—á–µ–º—É –±—ã –∏ –Ω–µ—Ç?", "–°–ª—É—à–∞–π —Å–≤–æ—ë —Å–µ—Ä–¥—Ü–µ—á–∫–æ", "–≠—Ç–æ –ø–ª–æ—Ö–∞—è –∏–¥–µ—è"
];

// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const ball = document.getElementById('ball');
const answerElement = document.getElementById('answer');
const shakeButton = document.getElementById('shakeButton');
const bounceSound = document.getElementById('bounceSound'); // –ó–≤—É–∫ —É–¥–∞—Ä–∞
const soundButton = document.getElementById('soundButton'); // –ö–Ω–æ–ø–∫–∞ –∑–≤—É–∫–∞

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–≤–∏–∂–µ–Ω–∏—è
let x = window.innerWidth / 2 - 75, y = window.innerHeight / 2 - 75; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
let dx = 0, dy = 0, isStopped = true;

const initialSpeed = 6;
const constantSpeedDuration = 2500; // –í—Ä–µ–º—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è (2 —Å–µ–∫—É–Ω–¥—ã)

// –§–ª–∞–≥ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–≤—É–∫–∞
let isSoundEnabled = false; // –ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–≤—É–∫–∞ –∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é
function preloadAudio() {
    if (isSoundEnabled) {
        bounceSound.play().catch(() => {}); // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫
        bounceSound.pause(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        bounceSound.currentTime = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è
    }
}

// –í—ã–∑—ã–≤–∞–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∑–≤—É–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('DOMContentLoaded', () => {
    preloadAudio();
    soundButton.textContent = 'üîá'; // –ó–Ω–∞—á–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∑–≤—É–∫–∞
    soundButton.classList.add('sound-off');

    // –†–∞—Å—à–∏—Ä—è–µ–º –æ–∫–Ω–æ Telegram Web App
    if (window.Telegram && Telegram.WebApp) {
        Telegram.WebApp.expand(); // –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    }
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —à–∞—Ä–∞
function setInitialPosition() {
    x = window.innerWidth / 2 - 75; // –¶–µ–Ω—Ç—Ä –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
    y = window.innerHeight / 2 - 75; // –¶–µ–Ω—Ç—Ä –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
    ball.style.transform = `translate(${x}px, ${y}px)`; // –ò—Å–ø–æ–ª—å–∑—É–µ–º transform
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª—è–º —Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ–º
function getRandomDirection() {
    const baseAngles = [
        Math.PI / 4,   // 45¬∞ (–ø—Ä–∞–≤–æ-–≤–µ—Ä—Ö)
        3 * Math.PI / 4, // 135¬∞ (–ª–µ–≤–æ-–≤–µ—Ä—Ö)
        5 * Math.PI / 4, // 225¬∞ (–ª–µ–≤–æ-–Ω–∏–∑)
        7 * Math.PI / 4  // 315¬∞ (–ø—Ä–∞–≤–æ-–Ω–∏–∑)
    ];
    const baseAngle = baseAngles[Math.floor(Math.random() * baseAngles.length)];
    const deviation = (Math.random() - 0.5) * (10 * Math.PI / 180); // ¬±10¬∞
    const angle = baseAngle + deviation;
    return {
        dx: Math.cos(angle),
        dy: Math.sin(angle)
    };
}

// –ù–∞—á–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ —à–∞—Ä–∞
function startMovement() {
    if (!isStopped) return;

    isStopped = false;
    answerElement.classList.remove('show');
    ball.classList.remove('glow-active');

    const direction = getRandomDirection();
    dx = direction.dx * initialSpeed;
    dy = direction.dy * initialSpeed;

    startTime = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –¥–≤–∏–∂–µ–Ω–∏—è
}

// –î–≤–∏–∂–µ–Ω–∏–µ —à–∞—Ä–∞
let startTime = null;

function moveBall() {
    if (!isStopped) {
        const currentTime = Date.now();

        // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º constantSpeedDuration, –¥–≤–∏–∂–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
        if (currentTime - startTime < constantSpeedDuration) {
            x += dx;
            y += dy;
        } else {
            // –ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
            const elapsedTime = (currentTime - startTime - constantSpeedDuration) / 1000; // –í—Ä–µ–º—è –ø–æ—Å–ª–µ constantSpeedDuration –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            const decelerationFactor = 1 - Math.min(elapsedTime * 0.01, 0.996); // –ù–µ–ª–∏–Ω–µ–π–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
            x += dx * decelerationFactor;
            y += dy * decelerationFactor;
            dx *= decelerationFactor;
            dy *= decelerationFactor;
        }

        let hitWall = false;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å–æ —Å—Ç–µ–Ω–∫–∞–º–∏
        if (x <= 0 || x >= window.innerWidth - 150) {
            dx = -dx;
            hitWall = true;
        }
        if (y <= 0 || y >= window.innerHeight - 150) {
            dy = -dy;
            hitWall = true;
        }

        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ –ø—Ä–∏ —É–¥–∞—Ä–µ
        if (hitWall && isSoundEnabled) {
            bounceSound.currentTime = 0;
            bounceSound.play().catch(() => {});
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —à–∞—Ä–∞ —á–µ—Ä–µ–∑ transform
        ball.style.transform = `translate(${Math.floor(x)}px, ${Math.floor(y)}px)`;

        // –ï—Å–ª–∏ —à–∞—Ä –ø–æ—á—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
        if (Math.abs(dx) < 0.2 && Math.abs(dy) < 0.2) {
            isStopped = true;
            answerElement.textContent = ANSWERS[Math.floor(Math.random() * ANSWERS.length)];
            answerElement.classList.add('show');
            ball.classList.add('glow-active');
            enableShakeDetection(); // –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä—è—Å–∫–∏
        } else {
            ball.classList.remove('glow-active');
        }
    }
    requestAnimationFrame(moveBall);
}

// –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä—è—Å–∫–∏
let lastShakeTime = 0, shakeCooldown = 400;
let isShakeDetectionActive = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

function enableShakeDetection() {
    if (isShakeDetectionActive) return; // –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    isShakeDetectionActive = true;

    if (window.DeviceMotionEvent) {
        window.addEventListener('devicemotion', handleDeviceMotion);
    }
}

function disableShakeDetection() {
    if (!isShakeDetectionActive) return; // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    isShakeDetectionActive = false;

    if (window.DeviceMotionEvent) {
        window.removeEventListener('devicemotion', handleDeviceMotion);
    }
}

function handleDeviceMotion(event) {
    const now = Date.now();
    if (now - lastShakeTime < shakeCooldown) return;

    const { x, y, z } = event.accelerationIncludingGravity;
    const acceleration = Math.sqrt(x * x + y * y + z * z);

    if (acceleration > 35 && isStopped) { // –£–≤–µ–ª–∏—á–µ–Ω –ø–æ—Ä–æ–≥ —É—Å–∫–æ—Ä–µ–Ω–∏—è
        startMovement();
        lastShakeTime = now;
        disableShakeDetection(); // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä—è—Å–∫–∏
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä—è—Å–∫—É"
shakeButton.addEventListener('touchstart', () => {
    if (isStopped) startMovement();
});
shakeButton.addEventListener('mousedown', () => {
    if (isStopped) startMovement();
});

// –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
soundButton.addEventListener('click', () => {
    isSoundEnabled = !isSoundEnabled;
    if (isSoundEnabled) {
        soundButton.textContent = 'üîä';
        soundButton.classList.remove('sound-off');
    } else {
        soundButton.textContent = 'üîá';
        soundButton.classList.add('sound-off');
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
setInitialPosition();
moveBall(); // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
enableShakeDetection(); // –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä—è—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ